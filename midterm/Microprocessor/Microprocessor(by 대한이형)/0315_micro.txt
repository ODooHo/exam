 2. 해밍코드


2^p >= d + p + 1
-> p: 패리티 비트 수, d: 데이터 비트 수
ex) 8비트 데이터를 보낼때
2 ^ p >= 8 + p + 1 ... p는 4

P1 영역.. 비트 위치 1, 3, 5, 7, 9 ... 
P2 영역.. 비트 위치 2·3, 6·7, 10·11 ...
P3 영역.. 비트 위치 4·5·6·7 ... 

45p.

검사된 패리티를 P8P4P2P1순으로 정렬..
-> 모든 패리티가 0이면 에러 없음
-> 0101 이므로 에러 있음
-> 10진수로 5이므로 앞에서 5번째에 오류 발생.
0101[1]1011110 에 에러가 발생
0101[0]1011110 로 바꿔주면 끘!

 3. 순환 중복 검사 (CRC)
수신 측에서는 수신된 d+k 비트의 데이터를 키 값으로 나눴을때 나머지가 0이면 에러가 없다.

*FCS: Frame Check Sequence

49p. 
CRC계산에 사용되는 모듈로-2 (mod2) 연산 
(k bits 추가.. '0 3개'해서 나눠주는거)

 · CRC 하드웨어
:하나하나 넣어주는거

-> 이와 같이 비트 단위로 CRC를 계산하면 회로는 간단하지만 처리 속도에 문제가 있다. 이를 해결하기 위해 CRC 테이블 기법을 많이 사용한다. 이 방법은 미리 CRC를 계산하여 메모리에 저장해 놓고 사용. 예를 들어 256개를 갖는 배열을 메모리에 저장하고, 데이터가 들어오면 바이트 단위로 테이블을 탐색하여 CRC를 결정한다.
------------------------------------

	03 조합 논리 회로
·반감산기
 한자리의 이진수 2개를 받아 Carry와 Sum을 구함

·전감산기
2진수 입력 A, B와 아랫자리에서 올라온 캐리 Ci 를 포함하여 1자리 2진수 3개를 더하는 조합 논리 회로

-> *** 전감산기는 반감산기 2개와 OR 게이트 1개를 사용해 나타낼 수 있다. (더 자세히)

***병렬 가감산기:  전가산기 여러 개를 병렬로 연결하여 만든 2비트 이상의 가산기

FA 4개를 연결하면 4bit 가감산기가 나온다 

6p.
*** FA는 무조건 입력을 3개 받아야함.. 따라서 첫번째 입력에 A0, B0을 포함해 ' 0 '이라도 입력 해줘야함. ***

