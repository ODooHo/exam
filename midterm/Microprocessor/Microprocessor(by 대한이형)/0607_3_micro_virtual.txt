 cpu가 참조하는 "가상 주소를 주기억 장치의 실제 주소로 변환하는 주소 매핑"이 필요하다.


	# 페이지에 의한 매핑

	예제 6-13
+ 블록 개수와 페이지의 크기는 같다

페이지 크기:
 2^10 * 2^2 = 2^12 Bytes
하나의 페이지=블럭 안에서 12bit가 필요함.
-> 변위 12bits
	+ 만약 주소가 4바이트 단위라면?.... ㅈ됨..


2^20/2^12 = 2^8 = 256개.
- 물리주소
페이지 구분을 위해 8비트 필요. 하위 12bit는 변위

- 가상 주소는
변위가 12비트를 알기 때문에. 나머지는 32-12 = 20은 
남은건 다 페이지


	# 연관 기억 장치
굳이 몰라도 상관 없다.

	# 세그먼트에 의한 매핑
대충 넘어간다.



	2. 페이지 교체 알고리즘
·FIFO, LRU, LFU 나오는데, 페이지 폴트 횟수 센다.

·NRU 알고리즘 Not Used Recently

참조:1 , 변형: 1이면 제일 가능한 나중에 교체해야된다.



	05 연관 기억 장치
·기억 장치의 모든 단자를 동시에 읽어 주어진 특성과 비교하므로 주소로만 접근할 때보다 훨씬 빠르다.

-동작

인자 레지스터(A): 101 11110
키 레지스터(K): 111 00000
-> 키 레지스터가 111이고 밑에가 다 0이면, 상위 3비트만 보면 된다는 뜻이다.
-> 위는 상위 비트가 '101 만' 찾으면 된다.

101 중 가운데가 '0'인 분~~~? 하고 물어보면
-> 워드1, 워드2, 워드3 을 순차적으로 비교하는게 아니라, 모든 워드가 동시에 대답한다.

