	제어장치:
ALU, I/O 장치에 프로세서가 전송한 명령어 수행 ->명령 레지스터의 opcode를 해독하여 제어 신호 발생
·클럭(시간)에 의해 동작

	01 컴퓨터 시스템의 구성
제어 장치의 기본 기능
 ·데이터 이동 순서 조정
 ·명령어 해독 opcode
 ·CPU 내 데이터 흐름 제어
 ·외부 명령을 받아 일련의 [제어 신호] 생성
 ·명령어 인출-해독-실행 순서

	02 제어 장치의 종류
1. 하드와이어 제어 장치 (H/W)
: 논리 회로로 만들어진 하드웨어, 제어 신호 발생

·제어 하드웨어는 클록 사이클에 따라 상태가 변하기 때문에, 명령 레지스터, 상태 코드, 외부 입력 등에 따라 상태가 다르게 변함.
-> 고속으로 작동 ( 'RISC' )


2. 마이크로 프로그램 제어 장치 (S/W)
: 하드와이어와 차이: '제어 메모리' 존재 여부

·마이크로 명령 설계 순서
1. 필요한 제어 신호의 목록 작성
2. 유사한 의미를 가진 제어 신호를 그룹화하여 필드 구성
3. 각 필드에 논리적인 순서 부여: ex) ALU 연산과 ALU 피연산자를 앞에 두고 이어 실행될 마이크로 명령의 제어 메모리 주소를 뒤에 둔다.
4. 마이크로 명령 형식에 대한 기호 범례를 작성하여 필드 값의 이름과 제어 신호 설정 방법 작성
5. 필드 폭을 최소화하기 위해 동시에 사용하지 않는 작업을 분리하여 인코딩
위 설계를 기반으로 명령어 사이클 (인출-해독-실행) 각각에 대한 '마이크로 프로그램 루틴' 작성 -> 프로그램은 제어 메모리에 들어감
·명령어 실행(연산) 사이클은 모든 기계어 명령마다 다르므로 일일이 정의

-> 제어 기억 장치에서 마이크로 명령을 읽어 오기 때문에 '속도가 느림'


3. 마이크로 프로그램 제어 장치의 종류

-수평적 마이크로 프로그램
 ·제어 신호가 제어 신호당 1비트로 해독된 2진 형식으로 표현 -> 제어 신호 50개라면 50비트의 제어 신호 필요. 
 ·한번에 2개 이상의 제어 신호 활성화 가능

-수직적 마이크로 프로그램
 ·제어 신호가 인코딩(비트열)된 2진 형식 -> N개 제어 신호가 필요할 경우 log2 N 비트 필요



4. 하드와이어 제어와 마이크로 프로그램 제어 비교
	참고 !!!



	03 명령어 사이클
: 인출->해독->실행 [= 데이터 경로 사이클]
·인터럽트 사이클
 :인터럽트가 있으면 인터럽트 처리 루틴 실행





+ PC <- PC + I
명령어의 기본 크기가 2바이트라면 I는 2가 됨.

