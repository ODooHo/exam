	01 진법과 진법 변환
 1. 디지털 정보의 단위
 · 1nibble = 4bit
 · 1byte(1B) = 8bit = 1문자(character)
 영어는 1byte, 한글은 2byte
-> 영어는 알파벳, 숫자, 특수기호 다 해도 2^8 = 256개가 안넘지만 한글은 넘는다.
 ·1워드(word): CPU에서 취급하는 명령어나 데이터의 길이에 해당하는 비트 수 
-> 명령어의 길이가 1word다. 워드 길이는 8·16·32·· 등 8의 배수가 가능
MSB: 최상위 비트, LSB: 최하위 비트

- SI(10진수 단위)· IEC (2진수 단위)
K(kilo-) = 10^3 = 2^10
M(mega-) = 10^6 = 2^20
G(giga-) = 10^9 = 2^30 ···

 2.진법
8진수: 2진수를 3개씩 묶는다 (세자리필요)
16진수: 4자리 필요

* 10진수를 8·16진수로 바꾸는 연습 할 듯?

	02 정수 표현
 1. 보수의 개념과 음수
·최상위비트를 부호비트로 사용
양수 : '0', 음수: '1'

·부호와 절댓값, 1의 보수 방식의 문제점
-> 0을 표기할때 -0, +0 이 생긴다. 
-> 공간 1개 낭비
·2의 보수 방식: 1의 보수 + 1
ex) 0000 (숫자 0) -> 1111 + 1 = 
(1은 날라감) => '0000' !

*** 49분 다시 듣기

 *양수를 보수로 바꾸면 음수
 *음수를 보수로 바꾸면 양수

 -2의 보수로 표현된 수를 10진수로 변환하는 방법
: 10101100 (음수!) -> 2의 보수로 바꾼다
-> 01010100 -> 십진수 변환 -> 84 = -84
* 소수로 시험 문제 낼 각

2. 부호 확장 : 늘어난 크기 만큼 수를 채움

3. 2진 정수 연산
뺄셈: A-B 대신에 "A+(B의 2의 보수)"
