0519 캐시1

캐시 히트: CPU가 원하는 데이터가 캐시에 있는 상태
캐시 미스: CPU가 원하는 데이터가 캐시에 없는 상태, 이 경우 주기억 장치로부터 데이터를 읽어온다.

·히트률 (hit ratio): 캐시에 히트되는 정도(H)
H = 캐시에 히트되는 횟수 / 전체 기억장치 액세스 횟수

·캐시의 미스율 (miss ratio) = ( 1 - H )

·평균 기억장치 액세스 시간 (Ta)
=> Ta = 어쩌구저쩌구

	32분
예제 6-5: R 사용

> x <- c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)

> Tc = 5
> Tm = 50
> Ta = 5 * (x*0.01) + (5 + 50) * (1 - x*0.01) -> 확률이므로 0.01 곱하기 (책에는 5를 안더함)

> plot(x, Ta, xlab='Hit Ratio', ylab='Average Ta')

우리는 히트율을 높여야함!

 *참조 지역성(locality of reference)
·공간적 지역성(spatial locality): 인접하여 저장되어 있는 데이터들이 연속적으로 액세스될 가능성 높다.

·시간적 지역성(temporal locality): 예를 들어 for루프 5천만번.. 한번 쓴 함수는 또 쓸 확률이 높다.
공통변수 (ex: 전역변수, 자주쓰는 변수는 계속 access됨)

11p.
	2. 사상 방식
·블록: 주기억 장치와 캐시 사이에 이동되는 정보 단위

Q. 캐시와 주기억 장치 사이는 1비트만 주고 받을수 있다? 
-> (X). 1비트 받으려 그래도 256바이트 보내야할 수도 있다. 블록이 크면 

블록을 한줄로 싹 눕혀서 만들어 놓는다. 그리고 캐시를 한줄 씩 읽는다.
-> 메모리에 있는 한 블록이 캐시에 있는 한 줄이 된다

·주기억 장치의 용량 = 2^n 워드, 블록 = K개 워드
-> 전체 블록의 수 = 2^n / K 개

·라인: 캐시의 라인 번호는 m개 존재. 0 - m-1까지
각 라인에는 '워드가 K'개 (ex: 워드가 32bit면. 32K개)

·태그: 라인에 적재된 블록을 구분해주는 정보
-> 주기억 장치는 16GB, 캐시는 512KB라고 치면,
캐시의 m개의 라인을 다 쓰고 있다.. 그럼 블록 m개가 넘어갔다는 뜻. 주기억 장치의 m+1 번째가 진입하려고 하면 무언가를 밀어내야함. 그럼 주기억 장치의 내용은 같은 라인의 일부로 들어갈 수 밖에 없음. 그럴때 같은 줄에 있는 블록을 구별하는 것이 "태그"

	사상 방식
: 주기억 장치의 블록이 어느 캐시 라인에 들어갈 것인지 결정하는 방법 3가지.
 ·직접 사상
 ·완전-연관 사상
 ·세트-연관 사상

