15p.

0-3 주소 명령
주소 숫자가 커질수록 명령어 길이가 짧아진다.

21p. 
	3. 확장 opcode
"4비트 opcode 3-주소 명령어"는
 0000부터 1101 까지만 쓸수있다. [14개] 
(1110, 1111)
만약 1110이 들어오면,,
1110 0000 이 "8비트 opcode가 되고 2-주소 명령어"가 된다. 1110 0000-1111 1101 까지 [30개]
또, 1111 1110 이 오면, '1110'을 보고 "12비트 opcode로 판단. 1-주소 명령어"1111 1110 0000-1111 1111 1110 까지 [31개](1111 남음)
이후 1111 1111 1111 0000 부터 전부다 1111까지 "0-주소 명령어. [16개]"

24p.
	스택 포인터
·스택 동작
 -명령어: PUSH operand //operand를 스택에 저장
   ·1) SP <- SP + [단어 크기] (SP를 위로 한 칸 올려라)
   ·2) Mem[SP] <- operand (데이터를 저장)
 -> 세분화 (마이크로오퍼레이션)
 · (SP는 주소)
1) SP <- SP + [단어 크기]
2) MAR <- SP, MBR <- 오퍼랜드 // MAR, MBR은 레지스터
3) Mem[MAR] <- MBR // 기억장치에 저장

 -명령어 POP operand
1) Operand <- Mem[SP]
2) SP <- SP - [단어 크기]
 ·마이크로오퍼레이션
1) MAR <- SP
2) MBR <- Mem[MAR]
3) SP <- SP - [단어 크기], 오퍼랜드 <- MBR
//SP감소, 레지스터 적재

	5. 명령어 종류
 ISA Instruction Set Architecture 컴퓨터의 명령어: 6개의 그룹
1. 데이터 이동 명령
2. 2항 연산
3. 단항 연산 ++ -- NOT
4. 비교와 조건 분기 명령 if else jmp
5. 프로시저 호출 명령 
6. 루프 제어 명령 for while lable goto

  ·데이터 이동 명령
-가장 기본이 되는 작업: 원본과 동일한 새로운 객체를 만드는 '복사', '원래 위치에 그대로 두고' 다른 장소에 복사본 생성

 ·2항 연산 AND OR XOR NOR NAND..
-AND연산: 워드에서 특정 비트를 추출하는 용도

PPT 29페이지 8비트 시프트?